@model net48_mvc.Entities.pegawai_tbl


@{
    ViewBag.Title = "Update";
}

<h2>Update</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>pegawai_tbl</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.NAMA, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NAMA, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NAMA, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EMAIL, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EMAIL, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EMAIL, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GENDER, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.GENDER == 1)
                {
                <div>

                    @Html.RadioButtonFor(model => model.GENDER, "1", new { Checked = true })
                    Male
                    @Html.RadioButtonFor(model => model.GENDER, "2")
                    Female
                </div>

                }
                else if (Model.GENDER == 2)
                {
                <div>
                    Male
                    @Html.RadioButtonFor(model => model.GENDER, "1")
                    Female
                    @Html.RadioButtonFor(model => model.GENDER, "2", new { Checked = true})
                </div>
                }
                @Html.ValidationMessageFor(model => model.GENDER, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HOBY, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.HOBY, new List<SelectListItem> { new SelectListItem { Text = "Pilih" },  new SelectListItem { Value = "1", Text = "1. Sepak Bola", Selected = Model.HOBY == 1 ? true : false }, new SelectListItem { Value = "2", Text = "2. Voli", Selected = Model.HOBY == 2 ? true : false }, new SelectListItem { Value = "3", Text = "3. Tenis Meja", Selected = Model.HOBY == 3 ? true : false } }, new { @class = "form-control" })
                @* @Html.EditorFor(model => model.HOBY, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.HOBY, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NIP, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NIP, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NIP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    
    @Html.ActionLink("Upload Photo", "Upload", "UploadFile", new { id = Model.ID }, new { id = Model.ID }) |
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
